{"version":3,"file":"js/981.b22da2f1.js","mappings":"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","sources":["webpack://nasa-images/./src/views/EpicEarth.vue?1a38","webpack://nasa-images/./src/views/EpicEarth.vue"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-ab0cc45a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  id: \"sliderContainer\",\n  class: \"ma-2\"\n}\nconst _hoisted_2 = [\"src\"]\n\nimport axios from 'axios'\nimport { ref, onMounted, onUnmounted, watch, computed } from 'vue'\n\nimport { useStore } from 'vuex'\ninterface ImageItem {\n  identifier: string\n  date: string\n}\n\nconst API_URL = 'https://api.nasa.gov/EPIC/api/enhanced'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'EpicEarth',\n  setup(__props) {\n\nconst store = useStore()\nconst api_key = store.state.apiKey\n\nconst selectedItem = ref<number>(-1)\n\nconst earthImageUrl = ref('')\nconst isLoading = ref(true)\nconst avaiableImages = ref<ImageItem[]>([])\n\nconst dayOfYear = ref<string>('')\nlet intervalId: number | null = null\nconst isPlaying = ref(false)\n\nonMounted(async () => {\n  try {\n    const response = await axios.get(API_URL, { params: { api_key } })\n    avaiableImages.value = response.data.map((item: any) => ({\n      identifier: item.identifier,\n      date: item.date\n    }))\n    const latest = response.data[response.data.length - 1]\n    dayOfYear.value = latest.date.split(' ')[0].replaceAll('-', '/') //format: YYY/MM/DD\n    selectedItem.value = 0\n  } catch (error) {\n    console.error(error)\n    isLoading.value = false\n  }\n})\n\nwatch(selectedItem, () => {\n  fetchEarthImage()\n})\n\nasync function fetchEarthImage() {\n  const identifier = avaiableImages.value[selectedItem.value]?.identifier\n  try {\n    if (!identifier) throw new Error('Could not find the latest image for this date')\n    isLoading.value = true\n    earthImageUrl.value = `https://epic.gsfc.nasa.gov/archive/natural/${dayOfYear.value}/png/epic_1b_${identifier}.png`\n  } catch (error) {\n    console.error(error)\n    isLoading.value = false\n  }\n}\n\nfunction onImageLoaded() {\n  isLoading.value = false\n}\n\nconst selectedDate = computed(() => avaiableImages.value[selectedItem.value]?.date)\n\nfunction togglePlay() {\n  if (isPlaying.value) {\n    clearInterval(intervalId!)\n    intervalId = null\n  } else {\n    intervalId = setInterval(() => {\n      selectedItem.value = (selectedItem.value + 1) % avaiableImages.value.length\n    }, 2000)\n  }\n  isPlaying.value = !isPlaying.value\n}\n\nonUnmounted(() => {\n  clearInterval(intervalId!)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_v_slider = _resolveComponent(\"v-slider\")!\n  const _component_v_icon = _resolveComponent(\"v-icon\")!\n  const _component_v_btn = _resolveComponent(\"v-btn\")!\n  const _component_v_chip = _resolveComponent(\"v-chip\")!\n  const _component_v_card = _resolveComponent(\"v-card\")!\n\n  return (_openBlock(), _createBlock(_component_v_card, {\n    variant: \"outlined\",\n    loading: isLoading.value,\n    \"min-height\": \"20\"\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createVNode(_component_v_slider, {\n          modelValue: selectedItem.value,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedItem).value = $event)),\n          min: 0,\n          max: avaiableImages.value.length - 1,\n          step: 1,\n          \"hide-details\": \"\"\n        }, null, 8, [\"modelValue\", \"max\"]),\n        _createVNode(_component_v_btn, { onClick: togglePlay }, {\n          default: _withCtx(() => [\n            (isPlaying.value)\n              ? (_openBlock(), _createBlock(_component_v_icon, {\n                  key: 0,\n                  color: \"error\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"fa-pause\")\n                  ]),\n                  _: 1\n                }))\n              : (_openBlock(), _createBlock(_component_v_icon, {\n                  key: 1,\n                  color: \"success\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"fa-play\")\n                  ]),\n                  _: 1\n                }))\n          ]),\n          _: 1\n        })\n      ]),\n      _createVNode(_component_v_chip, {\n        class: \"mb-2\",\n        color: \"success\",\n        variant: \"outlined\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_icon, { start: \"\" }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"fa-clock\")\n            ]),\n            _: 1\n          }),\n          _createTextVNode(\" \" + _toDisplayString(selectedDate.value), 1)\n        ]),\n        _: 1\n      }),\n      _createElementVNode(\"img\", {\n        src: earthImageUrl.value,\n        alt: \"Earth Image\",\n        onLoad: onImageLoaded,\n        id: \"earthImage\"\n      }, null, 40, _hoisted_2)\n    ]),\n    _: 1\n  }, 8, [\"loading\"]))\n}\n}\n\n})","import script from \"./EpicEarth.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./EpicEarth.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./EpicEarth.vue?vue&type=style&index=0&id=ab0cc45a&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\hacker\\\\Documents\\\\nasa-images\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ab0cc45a\"]])\n\nexport default __exports__"],"names":["_hoisted_1","id","class","_hoisted_2","API_URL","__name","setup","__props","store","api_key","state","apiKey","selectedItem","earthImageUrl","isLoading","avaiableImages","dayOfYear","intervalId","isPlaying","fetchEarthImage","identifier","value","Error","error","console","onImageLoaded","axios","params","response","data","map","item","date","latest","length","split","replaceAll","selectedDate","togglePlay","clearInterval","setInterval","_ctx","_cache","_component_v_slider","_component_v_icon","_component_v_btn","_component_v_chip","_component_v_card","variant","loading","default","_","modelValue","$event","min","max","step","onClick","key","color","start","src","alt","onLoad","__exports__"],"sourceRoot":""}